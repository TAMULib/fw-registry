{
  "id": "e82fa56b-6380-4c99-bae8-db79209fee11",
  "name": "Initial Query to MetaDB",
  "description": "",
  "deserializeAs": "DatabaseQueryTask",
  "inputVariables": [],
  "outputVariable": {
    "key": "itemHistoryResults",
    "type": "PROCESS",
    "spin": true
  },
  "designation": "metadb",
  "query": "SELECT item_id, hist_charges, hist_browses, Max(new_date) AS new_date, Sum(new_charges) AS new_charges, Sum(new_browses) AS new_browses, Max(last_transaction) FROM(SELECT l_items.item_id AS item_id, hist.item_id AS history_id, CASE WHEN Cast(loan_return_date at time zone 'America/Chicago' AS DATE) IS NULL THEN Cast(loan_date at time zone 'America/Chicago' AS DATE) ELSE Cast(loan_return_date at time zone 'America/Chicago' AS DATE) END AS new_date, hist.hist_charges AS hist_charges, hist.hist_browses AS hist_browses, CASE WHEN Cast(loan_return_date at time zone 'America/Chicago' AS DATE) IS NULL THEN 0 ELSE 1 END AS new_charges, 0 AS new_browses, last_transaction FROM folio_derived.loans_items l_items LEFT JOIN mis.item_history hist ON l_items.item_id :: uuid = hist.item_id :: uuid WHERE ( Cast(loan_date at time zone 'America/Chicago' AS DATE) > hist.last_transaction OR Cast(loan_return_date at time zone 'America/Chicago' AS DATE) > last_transaction OR hist.item_id IS NULL) UNION ALL SELECT (cci.jsonb ->>'itemId') :: uuid AS item_id, hist.item_id AS history_id, CAST(CAST(cci.jsonb ->> 'occurredDateTime' AS timestamptz) AT TIME ZONE 'America/Chicago' AS DATE) AS new_date, hist.hist_charges AS hist_charges, hist.hist_browses AS hist_browses, 0 AS new_charges, 1 AS new_browses, last_transaction FROM folio_circulation.check_in cci LEFT JOIN mis.item_history hist ON (cci.jsonb ->>'itemId') :: uuid = hist.item_id :: uuid WHERE ( Cast(CAST(cci.jsonb ->> 'occurredDateTime' AS timestamptz) AT TIME ZONE 'America/Chicago' AS DATE) > hist.last_transaction OR hist.item_id IS NULL ) AND cci.jsonb ->> 'itemStatusPriorToCheckIn' = 'Available') AS updates WHERE ( new_date >= last_transaction OR last_transaction IS NULL ) GROUP BY item_id, hist_charges, hist_browses, last_transaction ",
  "asyncBefore": true
}
